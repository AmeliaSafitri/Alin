Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/usr/local/lib/python3.10/dist-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/local/lib/python3.10/dist-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "/usr/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/usr/local/lib/python3.10/dist-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/usr/local/lib/python3.10/dist-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/local/lib/python3.10/dist-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
A = np.array ([[2,1,5], [0,4,1], [0,0,2]])
determinan = np.linalg.det(A)
print (A, "\n")
print("Determinan matriks adalah:", int(determinan))

n = a.shape[0]
identity_matrix = np.identity(n)
augmented_matrix = np.hstack((a, identity_matrix))

# Terapkan Eliminasi Gauss-Jordan
for i in range(n):
    if augmented_matrix[i][i] == 0.0:
        sys.exit('Pembagian dengan nol terdeteksi!')
    for j in range(n):
        if i != j:
            ratio = augmented_matrix[j][i] / augmented_matrix[i][i]
            for k in range(2 * n):
                augmented_matrix[j][k] = augmented_matrix[j][k] - ratio * augmented_matrix[i][k]

# Operasi baris untuk membuat elemen diagonal utama menjadi 1
for i in range(n):
    divisor = augmented_matrix[i][i]
    for j in range(2 * n):
        augmented_matrix[i][j] = augmented_matrix[i][j] / divisor

# Matriks invers
inverse_matrix = augmented_matrix[:, n:]

# Tampilkan matriks invers
print('\nMATRIKS INVERS ADALAH:')
for i in range(n):
    for j in range(n):
        print(inverse_matrix[i][j], end='\t')
    print()
------------------

----- stdout -----
[[2 1 5]
 [0 4 1]
 [0 0 2]] 

Determinan matriks adalah: 15
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
[0;32m<ipython-input-13-3a22a099dd0d>[0m in [0;36m<cell line: 7>[0;34m()[0m
[1;32m      5[0m [0mprint[0m[0;34m([0m[0;34m"Determinan matriks adalah:"[0m[0;34m,[0m [0mint[0m[0;34m([0m[0mdeterminan[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m      6[0m [0;34m[0m[0m
[0;32m----> 7[0;31m [0mn[0m [0;34m=[0m [0ma[0m[0;34m.[0m[0mshape[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      8[0m [0midentity_matrix[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0midentity[0m[0;34m([0m[0mn[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m      9[0m [0maugmented_matrix[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mhstack[0m[0;34m([0m[0;34m([0m[0ma[0m[0;34m,[0m [0midentity_matrix[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;31mNameError[0m: name 'a' is not defined

