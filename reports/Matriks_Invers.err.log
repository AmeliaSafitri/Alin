Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/usr/local/lib/python3.10/dist-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/local/lib/python3.10/dist-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "/usr/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/usr/local/lib/python3.10/dist-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/usr/local/lib/python3.10/dist-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/local/lib/python3.10/dist-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
import sys

# Baca ordo matriks
n = int(input('Masukkan ordo matriks: '))

# Buat array numpy berukuran n x 2n dan inisialisasi dengan nol
a = np.zeros((n, 2 * n))

# Baca koefisien matriks
print('Masukkan koefisien matriks:')
for i in range(1, n + 1):  # Mulai dari indeks 1
    for j in range(1, n + 1):  # Mulai dari indeks 1
        a[i - 1][j - 1] = float(input(f'a[{i}][{j}]='))

# Augmentasi dengan matriks identitas berordo n
for i in range(n):
    for j in range(n):
        if i == j:
            a[i][j + n] = 1

# Terapkan Eliminasi Gauss-Jordan
for i in range(n):
    if a[i][i] == 0.0:
        sys.exit('Pembagian dengan nol terdeteksi!')
    for j in range(n):
        if i != j:
            ratio = a[j][i] / a[i][i]
            for k in range(2 * n):
                a[j][k] = a[j][k] - ratio * a[i][k]

# Operasi baris untuk membuat elemen diagonal utama menjadi 1
for i in range(n):
    divisor = a[i][i]
    for j in range(2 * n):
        a[i][j] = a[i][j] / divisor

# Tampilkan matriks invers
print('\nMATRIKS INVERS ADALAH:')
for i in range(n):
    for j in range(n, 2 * n):
        print(a[i][j], end='\t')
    print()
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mStdinNotImplementedError[0m                  Traceback (most recent call last)
[0;32m<ipython-input-5-35e8e5dbee5a>[0m in [0;36m<cell line: 5>[0;34m()[0m
[1;32m      3[0m [0;34m[0m[0m
[1;32m      4[0m [0;31m# Baca ordo matriks[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 5[0;31m [0mn[0m [0;34m=[0m [0mint[0m[0;34m([0m[0minput[0m[0;34m([0m[0;34m'Masukkan ordo matriks: '[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      6[0m [0;34m[0m[0m
[1;32m      7[0m [0;31m# Buat array numpy berukuran n x 2n dan inisialisasi dengan nol[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py[0m in [0;36mraw_input[0;34m(self, prompt)[0m
[1;32m    846[0m         """
[1;32m    847[0m         [0;32mif[0m [0;32mnot[0m [0mself[0m[0;34m.[0m[0m_allow_stdin[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 848[0;31m             raise StdinNotImplementedError(
[0m[1;32m    849[0m                 [0;34m"raw_input was called, but this frontend does not support input requests."[0m[0;34m[0m[0;34m[0m[0m
[1;32m    850[0m             )

[0;31mStdinNotImplementedError[0m: raw_input was called, but this frontend does not support input requests.

